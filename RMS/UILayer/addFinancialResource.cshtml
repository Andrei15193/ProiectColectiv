@using ResourceManagementSystem.BusinessLogic.Entities;
@using ResourceManagementSystem.BusinessLogic.Workflow;

@{   
    Layout = "~/Views/Layouts/_MainLayout.cshtml";
    Page.Title = "Register Financial Resource";


    int step = 0;
    const int lastStep = 1;
    string errorMessage;
    string requestStep = IsPost ? Request["step"] : null;
    if (requestStep == null || !int.TryParse(requestStep, out step) || step > lastStep)
    {
        step = 0;
    }

    FinancialResourcesViewModel financialResourcesViewModel = Session["financialResourceViewModel"] as FinancialResourcesViewModel ?? ViewModelFactory.FinancialResourcesViewModel;
    Session["financialResourceViewModel"] = financialResourcesViewModel;

    switch (step)
    {
        case 0:
            financialResourcesViewModel.Value = null;
            financialResourcesViewModel.CurrencyTypeSelectedIndex = 0;
            break;

        case 1:
            financialResourcesViewModel.Value = Request["value"];
            financialResourcesViewModel.CurrencyTypeSelectedIndex = Request["currencyType"] == null ? 0 : Convert.ToInt32(Request["currencyType"]);
            break;

    }
}

@section body{
    <ul class="nav nav-tabs">
        <li class="active"><a>Register Financial Resource</a></li>
    </ul>

    <div class="well">
        <form action="~/addFinancialResource.cshtml" class="form-horizontal" method="post">
            @switch (step)
            {
                case 0:
                <input type="hidden" value="@(step + 1)" name="step" id="step" />
                <label for="value">Value:</label>
                <input type="text" name="value" id="value" />
                
                <label for="currencyType">Currency type:</label>
                <select name="currencyType" id="currencyType">

                    @for (int i = 0; i < financialResourcesViewModel.CurrencyTypes.Length; i++)
                    {
                        <option value="@i">@financialResourcesViewModel.CurrencyTypes[i]</option>
                    }
                </select>
                <br /><br />
                <p>
                    <input type="submit" value="Next" />
                </p>
                    break;

                case 1:
                    if (financialResourcesViewModel.TryAddFinancialResource(out errorMessage))
                    {
                <h1>Success!</h1>
                <p>The financial resource has been added to financial resources!</p>
                    }
                    else
                    {
                <h1>Error!</h1>
                <p>Could not add financial resource @errorMessage</p>
                    }
                <input type="submit" value="Finish" />
                    break;
            }
        </form>
    </div>
}
